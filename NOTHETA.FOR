
C     THIS IS A BOHR INTEGRATION FOR EITHER LUNG OR TISSUES
C     IT IS A SIMPLE ALGORITHM WITHOUT RUNGE-KUTTA,
C     JUST A GRADIENT METHOD WHERE ACCURACY DEPENDS
C     ON SUFFICIENTLY SMALL TIME STEPS
C     
C     DIFFUSING CAPACITY IS A CONSTANT LUMPED PARAMETER IN THIS VERSION
C     WHILE VC IS TECHNICALLY NEEDED TO COMPUTE TRANSIT TIME, THE FINAL
C     RESULT DEPENDS ONLY ON D/Q, AND IS INDEPENDENT OF CHOICE OF VC.
C     IN OTHER WORDS, CHOOSING A LARGE VC GIVES A LONG TRANSIT TIME FOR
C     A GIVEN BLOOD FLOW RATE, BUT THE TIME COURSE IS PRECISELY SLOWED
C     DOWN IN PROPORTION SO THAT ENDCAPILLARY AND MEAN CAPILLARY DATA
C     ARE UNAFFECTED.
C 
      DIMENSION TIME(1000),O2PLAS(1000),O2RBC(1000),O2CONC(1000),
     1CO2PLS(1000),CO2RBC(1000),CO2CNT(1000),DIFO2(1000),
     2DIFCO2(1000),O2SAT(1000),YY(1000)
      COMMON HB,HCRIT,TEMP,APH,BPH,APCO2,BPCO2,P50,O2SOL
C
C      DEFAULT VARIABLE VALUES (HEAVY EXERCISE, TISSUE UNLOADING):
C
C     PINO2 & PICO2 ARE    ARTERIAL   PO2/PCO2 FOR TISSUE INTEGRATION,
C                  &     MIXED VENOUS PO2/PCO2 FOR  LUNG  INTEGRATION 
C
      PINO2=100.0
      PINCO2=35.0
C
C     ALTSO2 & ALTSCO ARE     TISSUE  PO2/PCO2 FOR TISSUE INTEGRATION,
C                  &         ALVEOLAR PO2/PCO2 FOR  LUNG  INTEGRATION
      ALTSO2=0.0
      ALTSCO=90.0
C
C     NOW FOLLOW IN ORDER :
C
C  HB       HEMOGLOBIN, GM/100 ML
C  HRCIT    HEMATOCRIT (PER CENT), SET AT 3 * HB
C  TEMP     BODY TEMPERATURE, DEGREES CENTIGRADE
C  P50      O2 HEMOGLOBIN DISSOCIATION CURVE P50, TORR
C  APH      PH OF BLOOD EQUILIBRATED WITH PCO2 OF 30 TORR
C  APCO2    CORRESPONDING PCO2 (30 TORR)
C  BPH      PH OF BLOOD EQUILIBRATED WITH PCO2 OF 60 TORR
C  BPCO2    CORRESPONDING PCO2 (60 TORR)   
C  QT       TOTAL TISSUE OR PULMONARY BLOOD FLOW, L/MIN
C  VC       CAPILLARY BLOOD VOLUME, ML
C  DMO2     MEMBRANE DIFFUSING CAPACITY FOR O2, ML/MIN/TORR
C  DT       TIME STEP INTERVAL FOR NUMERICAL INTEGRATION, SECONDS
C
      O2SOL=0.003
      HB=15.0
      HCRIT=3.0*HB
      ITHETA=0
      TEMP=38.0
      P50=26.8
      APH=7.30
      APCO2=30.0
      BPH=7.10
      BPCO2=60.0
      QT=20.0
      VC=55.1 + 6.31*QT
C      VC=5.0*QT
      DMO2=150.0
      DT=0.001
C
C     HERE ARE THE CONSTANTS FOR THE STAUB ET AL THETA-O2 RELATIONSHIP:
C
C      B1=36.1633
C      B2=-1.5551
C      B3=0.0234
C      B4=-1.15173E-4
C
C     HERE IS THE HALF TIME OF THE CO2 CHEMICAL REACTIONS, SECONDS
C
C      THALF=0.15
C
C     THE PROCEDURE BEGINS WITH CHOICES REGARDING OUTPUT OPTIONS:
C
  10  CONTINUE
      WRITE(*,20)
  20  FORMAT(' WANT A HARDCOPY OUTPUT(1), OR JUST SCREEN OUPUT(0) ?')
      READ(*,*)IPR
      IF(IPR.EQ.0) GO TO 60
      WRITE(*,30)
  30  FORMAT(' DUMP HARDCOPY OUTPUT TO DISK (0) OR PRINTER (1)')
      READ(*,*)IOUT
      IF(IOUT.EQ.1) GO TO 50
C
C     YOU HAVE TO ENTER YOUR CHOSEN NAME FOR THE OUTPUT FILE NOW
C
      WRITE(*,40)
  40  FORMAT(' ENTER DISK FILENAME & EXTENSION NOW:')
      OPEN(8,FILE=' ',STATUS='NEW')
      GO TO 60
  50  OPEN(8,FILE='PRN')
  60  WRITE(*,70)
  70  FORMAT(' WANT A PLOT FILE ? (YES=1, NO=0)')
C
C     THE PLOT FILE, WHICH THE USER NAMES AT THIS POINT, CONTAINS THE
C     ARRAY OF VARIABLES THAT APPEAR IN THE MAIN OUTPUT PRINTED TABLE
C     AS A FUNCTION OF TIME. THE FORMAT IS 10 COLUMNS, 8 DIGITS EACH
C     EACH HORIZONTAL ROW GIVES RESULTS AT ONE TIME POINT FOR ALL THE
C     VARIABLES. EACH COLUMN THEREFORE TABULATES ONE VARIABLE IN TIME
C     THE TEN VARIABLES, FROM LEFT TO RIGHT IN THE TABLE ARE:
C
C  1   TIME,  SECONDS
C  2   PLASMA PO2,  TORR
C  3   RED CELL PO2,  TORR
C  4   BLOOD O2 CONTEN,  ML/100 ML
C  5   PLASMA PCO2,  TORR
C  6   RED CELL PCO2,  TORR
C  7   BLOOD CO2 CONTENT,  ML/100 ML
C  8   INSTANTANEOUS O2 DIFFUSING CAPACITY,  ML/MIN/TORR
C  9   CORRESPONDING CO2 DIFFUSING CAPACITY,  ML/MIN/TORR
C  10  BLOOD O2 SATURATION,  %
C
      READ(*,*)IPL
      IF(IPL.EQ.1) WRITE(*,40)
      IF(IPL.EQ.1) OPEN(3,FILE=' ',STATUS='NEW')
C
C     CHOOSE WHETHER TO RUN THE LUNG OR TISSUE INTEGRATION NOW
C
      WRITE(*,80)
  80  FORMAT(' FOR LUNG BOHR INT ENTER 0; FOR TISSUE, 1')
      READ(*,*)ILT
  90  CONTINUE
      IF(ILT.EQ.0)WRITE(*,100)
      IF(ILT.EQ.1)WRITE(*,110)
      IF(ILT.EQ.0.AND.IPR.EQ.1) WRITE(8,100)
      IF(ILT.EQ.1.AND.IPR.EQ.1) WRITE(8,110)
 100  FORMAT(//////' ***************  BOHR INTEGRATION FOR THE LUNGS'
     1'  ***************'//)
 110  FORMAT(//////' **************  BOHR INTEGRATION FOR THE TISSUES'
     1'  **************'//)
C
C     NOW FOLLOWS DATA ENTRY SECTION
C     VARIABLES ARE ENTERED FORMAT FREE (DECIMALS OPTIONAL, COMMAS
C     TO SEPARATE)
C
C     THE INPUT DATA ARE ALSO PRINTED OUT NOW (IF HARDCOPY DESIRED)
C
 120  IF(ILT.EQ.0)WRITE(*,130)PINO2,PINCO2,ALTSO2,ALTSCO
 130  FORMAT(' MIXED VENOUS PO2 & PCO2 AND ALVEOLAR PO2 & PCO2'/
     1F17.1,F7.1,F17.1,F7.1)
      IF(ILT.EQ.1)WRITE(*,140)PINO2,PINCO2,ALTSO2,ALTSCO
 140  FORMAT(' INFLOWING PaO2 & PaCO2 AND TISSUE PO2 & PCO2'/
     1F15.1,F8.1,F11.1,F11.1)
      WRITE(*,150)
 150  FORMAT(' ARE THESE OK OR NOT (YES=1, NO=0) ?')
      READ(*,*)IOK
      IF(IOK.EQ.1) GO TO 180
      IF(ILT.EQ.0) WRITE(*,160)
      IF(ILT.EQ.1) WRITE(*,170)
 160  FORMAT(' ENTER CORRECT PVO2,PVCO2,PALVO2,PALVCO2, FORMAT FREE')
 170  FORMAT(' ENTER CORRECT PaO2,PaCO2,PTISSO2,PTISSCO2, FORMAT FREE')
      READ(*,*)PINO2,PINCO2,ALTSO2,ALTSCO
      GO TO 120
 180  CONTINUE
      IF(ILT.EQ.0.AND.IPR.EQ.1)
     1WRITE(8,190)PINO2,PINCO2,ALTSO2,ALTSCO
      IF(ILT.EQ.1.AND.IPR.EQ.1)
     1WRITE(8,200)PINO2,PINCO2,ALTSO2,ALTSCO
 190  FORMAT(' MIXED VENOUS PO2 =',F6.1,10X,
     1' AND MIXED VENOUS PCO2 =',F6.1,/,
     24X,' ALVEOLAR PO2 =',F6.1,10X,
     3' AND     ALVEOLAR PCO2 =',F6.1,//)
 200  FORMAT(' ARTERIAL PO2 =',F6.1,10X,
     1' AND ARTERIAL PCO2 =',F6.1,/,
     2'   TISSUE PO2 =',F6.1,10X,
     3' AND   TISSUE PCO2 =',F6.1,//)
 210  WRITE(*,220)HB,TEMP,P50,APH,BPH,O2SOL
 220  FORMAT(//,5X,'HB      TEMP      P50      PH30     PH60   O2 SOL'
     1,/,5F9.2,F9.4)
      WRITE(*,150)
      READ(*,*)IOK
      IF(IOK.EQ.1) GO TO 240
      WRITE(*,230)
 230  FORMAT(' ENTER CORRECT HB,TEMP,P50,PH30,PH60,O2SOL FORMAT FREE')
      READ(*,*)HB,TEMP,P50,APH,BPH,O2SOL
      HCRIT=3.0*HB
      GO TO 210
 240  CONTINUE
      IF(IPR.EQ.1)
     1WRITE(8,250)HB,HCRIT,TEMP,P50,APH,APCO2,BPH,BPCO2,O2SOL
 250  FORMAT('  HB =',F5.1,11X,'HCRIT =',F6.1,10X,
     1'TEMP =',F6.1,5X,'AND P50 =',F6.1,/,
     2' APH =',F6.2,5X,' AND APCO2 =',F6.1,/,
     3' BPH =',F6.2,5X,' AND BPCO2 =',F6.1/,
     4' O2 SOL =',F8.4/)
 260  WRITE(*,270)QT,DMO2,DT
 270  FORMAT(//' TOTAL BLOODFLOW, LUMPED DO2  &   dT'/
     1F10.3,F15.3,F10.3,F10.5)
      WRITE(*,150)
      READ(*,*)IOK
      IF(IOK.EQ.1) GO TO 290
      WRITE(*,280)
 280  FORMAT(' ENTER: QT, l/min;  DO2, ml/min/torr; DT, sec')
      READ(*,*)QT,DMO2,DT
      VC=5.0*QT
      GO TO 260
 290  CONTINUE
      IF(IPR.EQ.1)
     1WRITE(8,300)QT,VC,DMO2,DT
 300  FORMAT(' TOTAL BLOOD FLOW =',F7.3,'  L/MIN',/,
     1' CAPILLARY BLOOD VOLUME =',F7.3,'   ML',/,
     2' DO2 =',F7.3,'   ML/MIN/TORR',/,
     3' TIME STEP FOR INTEGRAL =',F9.5,'  SECONDS'/)
      QMS=QT*1000.0/60.0
C
C     QMS IS TOTAL BLOOD FLOW, ML/SEC
C
      TT=VC/QMS
C
C     TT IS TRANSIT TIME (SECONDS) COMPUTED AS CAPILLARY VOLUME/BLOOFLOW
C     ITS VALUE IS ONLY AS CORRECT AS THE ASSUMED VALUE OF VC FROM WHICH
C     IT IS DERIVED.HOWEVER, THE NUMERICAL RESULTS ARE TOTALLY INDEPENDENT
C     OF CHOICE OF VC AND HENCE TT - DEPENDING ON DO2/Q ONLY.
C
      WRITE(*,310)TT
      IF(IPR.EQ.1)
     1WRITE(8,310)TT
 310  FORMAT(' TRANSIT TIME =',F7.2,'    SECONDS'//)
      DMO2S=DMO2/60.0
      DMCO2S=20.0*DMO2S
C
C     DMO2S= MEMBRANE O2 DIFF CAP, ML/SEC/TORR
C     DMCO2S=MEMBRANE CO2 DIFF CAP, ML/SEC/TORR, ASSUMED 20 x THAT FOR O2
C     BASED ON DIFFERENCES IN SOLUBILITY AND MOLECULAR WEIGHT
C
C     ALL QUANTITIES ARE NOW IN SECONDS, TORR & ML
C
      TNT=TT/DT
      NT=TNT
      CALL BLOOD(PINO2,PINCO2,CINO2,CINCO2,SATRN)
      SATOR=SATRN
      PO2=PINO2
      PLASPO=PINO2
      PCO2=PINCO2
      PLASPC=PINCO2
      O2C=CINO2
      O2DEL=10.0*QT*O2C
      CO2C=CINCO2
      PBARO2=PO2
      PBARCO=PCO2
      T=0.0
      WRITE(*,320)
      IF(IPR.EQ.1)WRITE(8,320)
 320  FORMAT(8X,'N',3X,'SECS',2X,'PLASMA',2X,'RBC',4X,'O2CON',2X,
     1'PLASMA',2X,'RBC',3X,'CO2CON',3X,'DO2',4X,'DCO2',1X,'O2SAT')
      WRITE(*,330)
      IF(IPR.EQ.1)WRITE(8,330)
 330  FORMAT(19X'PO2'4X'PO2'12X'PCO2'3X'PCO2'/)
C**********
C     HERE IS THE BOHR LOOP ITSELF (DO 350 IS OUTER LOOP, 340 IS INNER)
C**********
      PRK=0.01/DT
      KPRINT=PRK
      IF(KPRINT.LE.0) KPRINT=1
      K=0
      DSUM=0.0
      DO 350 J=1,1000
      WRITE(*,380)J,K,T,PLASPO,PO2,O2C,PLASPC,PCO2,CO2C,DO,DCO,SATRN
      IF(IPR.EQ.1)
     1WRITE(8,380)J,K,T,PLASPO,PO2,O2C,PLASPC,PCO2,CO2C,DO,DCO,SATRN
      IF(IPL.EQ.1)
     1WRITE(3,370)T,PLASPO,PO2,O2C,PLASPC,PCO2,CO2C,DO,DCO,SATRN
      DO 340 I=1,KPRINT
      K=K+1
C     
C     NOW FOLLOWS DO2 COMPUTATION A LA ROUGHTON & FORSTER, 1957
C
C      IF(SATRN.LE.76.0) THETA=2.8
C      IF(SATRN.GT.76.0.AND.SATRN.LT.94.0)
C     1THETA=B1+B2*SATRN+B3*SATRN**2+B4*SATRN**3
C      IF(SATRN.GE.94.0) THETA=24.0-0.24*SATRN
C      THETA=THETA/60.0
C****************
C     THIS LINE REDUCES THETA IN PROPORTION TO HB
C     IF YOU WISH (IE., IF ITHETA IS SET TO 1)
C
C      IF(ITHETA.EQ.1) THETA=THETA*HB/15.0
C****************
C
C     THIS PUTS THETA IN ML/SEC/ML/TORR
C
C      DINV=1.0/DMO2S + 1.0/(VC*THETA)
      DINV=1.0/DMO2S
      DO2=1.0/DINV
      IF(K.GT.1) DSUM=DSUM+DO2*60.0
C
C     NOW FOLLOWS DCO2 COMPUTATION USING HALFTIME
C     OF 0.15 SECONDS AND SAME CONCEPT AS FOR O2:
C     1/D  =  1/DMCO2  +  1/(THETA * VC)
C     THETA IS COMPUTED FROM THE HALFTIME AS FOLLOWS:
C 
C      AA=41.58*CO2C*VC
C      BB=THALF*PCO2*100.0
C      AB=AA/BB
C      AB=AB/60.0
C      DINV=1.0/DMCO2S + 1.0/AB
      DINV=1.0/DMCO2S
      DCO2=1.0/DINV
      RK=K
      DO=DO2*60.0
      DCO=DCO2*60.0
C
C     THE ABOVE PUTS DO2 AND DCO2 AS PRINTED IN ML/MIN/TORR
C
      TIME(K)=T
      O2PLAS(K)=PLASPO
      O2RBC(K)=PO2
      O2CONC(K)=O2C
      CO2PLS(K)=PLASPC
      CO2RBC(K)=PCO2
      CO2CNT(K)=CO2C
      DIFO2(K)=DO
      DIFCO2(K)=DCO
      O2SAT(K)=SATRN
      IF(T.GT.0.9999*TT) GO TO 360
      T=T+DT
      O2C=O2C+DO2*(ALTSO2-PO2)*DT*100.0/VC
      CO2C=CO2C+DCO2*(ALTSCO-PCO2)*DT*100.0/VC
      CALL FNDCON(PO2,PCO2,O2C,CO2C,ILT,SATRN)
      PLASPO=ALTSO2-(ALTSO2-PO2)*DO2/DMO2S
      PLASPC=ALTSCO+(PCO2-ALTSCO)*DCO2/DMCO2S
      PBARO2=(PBARO2*RK+PO2)/(RK+1.0)
      PBARCO=(PBARCO*RK + PCO2)/(RK+1.0)
 340  CONTINUE     
 350  CONTINUE
 360  CONTINUE
C
C     THIS ENDS THE BOHR INTEGRATION LOOP
C
 370  FORMAT(F8.3,9F8.2)
 380  FORMAT(1X,I3,I6,F6.3,2F7.1,F8.2,2F7.1,F8.2,2F7.2,F6.1)
C
C     OVERALL OUPUT DATA ARE NOW COMPUTED AND PRINTED
C
      DO2BAR=DSUM/FLOAT(K-1)
      VO2=ABS(10.0*QT*(CINO2-O2C))
      O2EXT=100.0*VO2/O2DEL
      VCO2=ABS(10.0*QT*(CINCO2-CO2C))
      R=VCO2/VO2
      DIFFPO=ABS(ALTSO2-PO2)
      DIFFPC=ABS(ALTSCO-PCO2)
      IF(ILT.EQ.0)
     1WRITE(*,390)PO2,PCO2,DIFFPO,DIFFPC,PBARO2,PBARCO,DO2BAR
      IF(ILT.EQ.0.AND.IPR.EQ.1)
     1WRITE(8,390)PO2,PCO2,DIFFPO,DIFFPC,PBARO2,PBARCO,DO2BAR
 390  FORMAT(//' ENDCAPILLARY PO2   =',F8.1,3X,
     1'  AND  PCO2 =',F6.1,//,
     2' ALVEOLAR-ENDCAPILLARY PO2 DIFF =',F5.1,
     3'; ENDCAPILLARY-ALVEOLAR PCO2 DIFF =',F5.1,//,
     4' MEAN CAPILLARY PO2 =',F8.1,4X,
     5' AND  PCO2 =',F6.1//,
     6' MEAN O2 DIFFUSING CAPACITY, ML/MIN/TORR  =',F8.3/)
      IF(ILT.EQ.1)
     1WRITE(*,400)PO2,PCO2,DIFFPO,DIFFPC,PBARO2,PBARCO,DO2BAR
      IF(ILT.EQ.1.AND.IPR.EQ.1)
     1WRITE(8,400)PO2,PCO2,DIFFPO,DIFFPC,PBARO2,PBARCO,DO2BAR
 400  FORMAT(//' ENDCAPILLARY PO2   =',F8.1,3X,
     1'  AND  PCO2 =',F6.1,//,
     2' ENDCAPILLARY-TISSUE PO2 DIFF =',F6.2,1X,
     3' & TISSUE-ENDCAPILLARY PCO2 DIFF =',F6.2,//,
     4' MEAN CAPILLARY PO2 =',F8.1,4X,
     5' AND  PCO2 =',F6.1//,
     6' MEAN O2 DIFFUSING CAPACITY, ML/MIN/TORR  =',F8.3/)
      WRITE(*,410)VO2,VCO2,R,O2DEL,O2EXT
      IF(IPR.EQ.1)
     1WRITE(8,410)VO2,VCO2,R,O2DEL,O2EXT
 410  FORMAT(' VO2 =',F10.1,5X,'VCO2 =',F10.1,5X,
     1' AND R =',F5.2,//,
     2' O2 DELIVERY =',F10.1,'   AND % EXTRACTION =',F6.1/)
      WRITE(*,420)
 420  FORMAT(' WANT TO GO BACK AND DO IT AGAIN ? (YES=1, NO=0)')
      READ(*,*)IMOR
      IF(IMOR.EQ.0) GO TO 440
      WRITE(*,430)
 430  FORMAT(' BACK TO THE VERY TOP (REDEFINE DISK FILES),'/,
     1' OR JUST TO THE POINT OF DATA ENTRY, EXPANDING EXISTING FILES ?'/
     2' 1=BACK TO THE VERY TOP, DEFINE NEW FILES;  0=JUST REENTER DATA')
      READ(*,*)IMOR
      IF(IMOR.EQ.0) GO TO 90
      CLOSE(8)
      CLOSE(3)
      GO TO 10
 440  CONTINUE
      END
      SUBROUTINE BLOOD(PO2,PCO2,O2C,CO2C,SATRN)
C
C     COMPUTES CONTENTS FROM PARTIAL PRESSURES, CALLING THE DISSOCIATION
C     CURVE ROUTINES THAT FOLLOW
C
      COMMON HB,HCRIT,TEMP,APH,BPH,APCO2,BPCO2,P50,O2SOL
      PH1=PH(PCO2,0.0)
      Y=0.003*HB*(1.0-SATURA(PO2,PCO2,PH1)/100.0)
      PH2=PH(PCO2,Y)
      SATRN=SATURA(PO2,PCO2,PH2)
      O2C=0.0139*HB*SATRN + O2SOL*PO2
      CO2C=CO2CON(PCO2,PH2,SATRN)
      RETURN
      END
      FUNCTION PH(PPCO2,Y)
C
C     COMPUTES PH FROM BUFFER DATA AND PCO2
C
      COMMON HB,HCRIT,TEMP,APH,BPH,APCO2,BPCO2,P50,O2SOL
      IF(PPCO2.LT.0.001) PPCO2=0.001
      IF(APH-1.)10,10,20
  10  PH=7.590+Y-.2741*ALOG(PPCO2/20.)
      GO TO 30
  20  PH=BPH+Y+(APH-BPH)*ALOG(PPCO2/BPCO2)/ALOG(APCO2/BPCO2)
  30  RETURN
      END
      FUNCTION CO2CON(PCO2,PHE,SATN)
C
C     KELMAN'S CO2 DISSOCIATION CURVE
C
      COMMON HB,HCRIT,TEMP,APH,BPH,APCO2,BPCO2,P50,O2SOL
      P=7.4-PHE
      PK=6.086+.042*P+(38.-TEMP)*(.00472+.00139*P)
      SOL=.0307+.00057*(37.-TEMP)+.00002*(37.-TEMP)*(37.-TEMP)
      DOX=.59+.2913*P-.0844*P*P
      DR=.664+.2275*P-.0938*P*P
      DDD = DOX + (DR - DOX)*(1.-SATN/100.)
      CP=SOL*PCO2*(1.+10.**(PHE-PK))
      CCC = DDD*CP
      CO2CON = (HCRIT*CCC*.01 + (1. - HCRIT*.01)*CP)*2.22
      RETURN
      END
      FUNCTION SATURA(PPO2,PPCO2,PHE)
C
C     KELMAN'S O2 DISSOCIATION CURVE
C     
      COMMON HB,HCRIT,TEMP,APH,BPH,APCO2,BPCO2,P50,O2SOL
      A1=-8.532229E3
      A2=2.121401E3
      A3=-6.707399E1
      A4=9.359609E5
      A5=-3.134626E4
      A6=2.396167E3
      A7=-6.710441E1
      B=.43429*ALOG(40.)-.43429*ALOG(PPCO2)
      X=PPO2*10.**(.024*(37.-TEMP)+.4*(PHE-7.4)+.06*B)
      X=X*26.8/P50
      IF(X-10.)10,20,20
  10  SAT=0.003683*X+0.000584*X*X
      GO TO 30
  20  SAV2 = X*(X*(X*(X+A3)+A2)+A1)
      SAV3 = X*(X*(X*(X+A7)+A6)+A5)+A4
      SAT = SAV2/SAV3
  30  SATURA=100.*SAT
      RETURN
      END
      SUBROUTINE FNDCON(PO2,PCO2,OXO2,COCON,ILT,SATRN)
C
C     THIS SUBROUTINE FINDS THE PO2 AND PCO2 THAT CORRESPOND TO A GIVEN PAIR OF
C     CONTENTS. THIS IS ACHIEVED BY A TWO DIMENSIONAL  NEWTON-RAPHSON ITERATIVE
C     PROCEDURE ANALOGOUS TO THAT USED TO MATCH V/Q RATIOS.
C     ACCURACY OF THE MATCH IS FORCED TO WITHIN 0.001 ML/100ML BLOOD
C
      DIMENSION X(4),Y(4),F(4),G(4),U(4)
      DOUBLE PRECISION U,F,G,DET1,DET2
      COMMON HB,HCRIT,TEMP,APH,BPH,APCO2,BPCO2,P50,O2SOL
      TOL=0.001
      DO 10 KK=1,4
      F(KK)=0.0
      G(KK)=0.0
      U(KK)=0.0
  10  CONTINUE
      ITER=0
      NNN=3
      X(1)=PO2
      Y(1)=PCO2
      X(2)=PO2 + 5.0*(-1.0)**ILT
      Y(2)=PCO2
      X(3)=PO2
      Y(3)=PCO2 - 5.0*(-1.0)**ILT
  20  DO 50 N=1,NNN
      PH1 = PH(Y(N),0.0)
      Y1 = .003*HB*(1. - SATURA(X(N),Y(N),PH1)/100.)
      PH2 = PH(Y(N),Y1)
      SATRN = SATURA(X(N),Y(N),PH2)
      F(N) = .0139*HB*SATRN + O2SOL*X(N) - OXO2
      G(N) = CO2CON(Y(N),PH2,SATRN) - COCON
      IF(ABS(F(N))-TOL)30,30,50
  30  IF(ABS(G(N))-TOL)40,40,50
  40  PO2 = X(N)
      PCO2 = Y(N)
      GO TO 170
  50  CONTINUE
      DO 60 N=1,3
      U(N)=1.
  60  CONTINUE
      CALL DETERM(U,F,G,DET1)
      DO 70 N=1,3
      U(N)=X(N)
  70  CONTINUE
      NFLAG=0
  80  CALL DETERM(U,F,G,DET2)
      IF(NFLAG-1)90,100,100
  90  IF(DET1.EQ.0.0) WRITE(*,180)
      X(4)=DET2/DET1
      GO TO 110
 100  IF(DET1.EQ.0.0) WRITE(*,180)
      Y(4)=DET2/DET1
 110  IF(NFLAG-1)120,140,140
 120  DO 130 N=1,3
      U(N)=Y(N)
 130  CONTINUE
      NFLAG=1
      GO TO 80
 140  DO 150 N=1,2
      J=4-N
      X(J)=X(J-1)
      Y(J)=Y(J-1)
      F(J)=F(J-1)
      G(J)=G(J-1)
 150  CONTINUE
      X(1)=X(4)
      Y(1)=Y(4)
      NNN=1
      ITER=ITER+1
      IF(ITER-30)160,170,170
 160  GO TO 20
 170  CONTINUE
 180  FORMAT(' DET1 IS ZERO IN FNDCON')
      RETURN
      END
      SUBROUTINE DETERM(U,F,G,DET)
C
C     THIS SUBROUTINE IS USED BY FNDCON TO SOLVE THE NUMERCIAL
C     EQUATIONS NECESSARY IN COMPUTING PARTIAL PRESSURES FROM CONTENTS
C
      DIMENSION U(4),F(4),G(4),W(4)
      DOUBLE PRECISION U,F,G,W,D,DET
      DO 10 KK=1,4
  10  W(KK)=0.0
      I=1
      J=2
      K=3
  20  W(I)=U(I)*(F(J)*G(K)-F(K)*G(J))
      IF(I-3)30,60,60
  30  IF(I-1)40,40,50
  40  I=2
      J=3
      K=1
      GO TO 20
  50  I=3
      J=1
      K=2
      GO TO 20
  60  D=0.0
      DO 70 I=1,3
      D=D+W(I)
  70  CONTINUE
      DET=D
      RETURN
      END